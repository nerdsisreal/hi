t = -5:0.01:5;

x = zeros(size(t));
x(t==0) = 1;
subplot(3,1,1);
plot(t,x);

subplot(3,1,2);
x = ones(size(t));
x(t<0) = 0;
plot(t,x);
ylim([-3 3]);


subplot(3,1,3);
x = x.*t;
plot(t,x);



t = 0:0.001:10;
y = sin(t);


subplot(2,2,1);
plot(t,y);


subplot(2,2,2);
a = 0.8;
y = exp(a*t);
plot(t,y);

subplot(2,2,3);
a = -0.8;
y = exp(a*t);
plot(t,y);

subplot(2,2,4);
t = -5:0.1:5
y = rand(size(t));
plot(t,y);



t = -10:0.01:10;
y = sawtooth(t);
subplot(3,1,1);
plot(t,y);
y = square(t);
subplot(3,1,2);
plot(t,y);


y = sawtooth(t,0.5);
subplot(3,1,3);
plot(t,y);





% convolution

x = [1 2 3 4];
y = [1 2 2 1];
% z = conv(x,y);
m = length(x);
n = length(y);

X = [x, zeros(1,n-1)];
H = [y, zeros(1,m-1)];
l = m+n-1;

Z = zeros(1,l);

for i = 1:l
    for j = 1:i
        Z(i) = Z(i) + X(j) * H(i-j+1);
    end
end

stem(Z);



%dft idft  with formula
clc;
clear all;
close all;
fs = 400; % sampling frequency
T = 1/fs; % Sampling period
duration = 1;
N = duration * fs;

t = (0:N-1)* T;




f1 = 10;
f2 = 20;

y = sin(2*pi*f1*t) + 0.5* sin(2*pi*f2*t);

subplot(3,1,1);
plot(t,y)

% fft begins
z = fft(y);
mag = abs(z);
subplot(3,1,2);

freq = (0:N-1)*fs/N;
plot(freq ,mag);

%ift
regerated_signal = ifft(z);
subplot(3,1,3);
plot(t,regerated_signal);




















% filter


clc; clear all; close all;

t = 0:1/100:1-1/100;
y = sin(2*pi*10*t);

subplot(4,1,1);
plot(t, y);
title('Original Signal');

noise = 0.5 * randn(size(t));
y1 = noise + y;

subplot(4,1,2);
plot(t, y1);
title('Signal with Noise');

% Design a low-pass FIR filter
d = designfilt('lowpassfir', 'FilterOrder', 4, 'CutoffFrequency', 15, 'SampleRate', 100);

% Apply the filter to the signal with noise
k = filtfilt(d, y1);

% Plot the original signal, signal with noise, and the filtered signal
subplot(4,1,3);

plot(t,k);
subplot(4,1,4);
plot(t,y);
hold on;
plot(t,k);
